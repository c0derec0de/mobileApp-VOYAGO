name: Backend CI

on:
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'backend/**'

permissions:
  contents: read
  packages: write
  pull-requests: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Build
        run: |
          cd backend
          ./gradlew build -x test --no-daemon

  test:
    if: ${{ github.base_ref == 'develop' }}
    name: Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Setup Docker
        uses: docker/setup-docker-action@v4

      - name: Execute tests
        run: |
          cd backend
          ./gradlew test --no-daemon

      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.7.2
        with:
          paths: |
            ${{ github.workspace }}/**/account-service/build/reports/jacoco/test/jacocoTestReport.xml
            ${{ github.workspace }}/**/ai-service/build/reports/jacoco/test/jacocoTestReport.xml
            ${{ github.workspace }}/**/auth-service/build/reports/jacoco/test/jacocoTestReport.xml
            ${{ github.workspace }}/**/notification-service/build/reports/jacoco/test/jacocoTestReport.xml
            ${{ github.workspace }}/**/rating-service/build/reports/jacoco/test/jacocoTestReport.xml
            ${{ github.workspace }}/**/route-service/build/reports/jacoco/test/jacocoTestReport.xml
            ${{ github.workspace }}/**/subscription-service/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 0

#  build_and_push_images:
#    # if: ${{ github.base_ref == 'main' }}
#    name: Build and Push Docker Images
#    runs-on: ubuntu-latest
#    needs: test
#    steps:
#      - name: Setup repo
#        uses: actions/checkout@v4
#
#      - name: Setup Docker
#        uses: docker/setup-docker-action@v4
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ vars.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build Images
#        run: |
#          cd backend
#          docker compose build
#
#      - name: Push Images
#        run: |
#          cd backend
#          docker compose push

#  deploy:
#    # if: ${{ github.base_ref == 'main' }}
#    name: Deploy
#    runs-on: ubuntu-latest
#    needs: build_and_push_images
#    steps:
#      - name: Setup repo
#        uses: actions/checkout@v4
#
#      - name: Copy files via SSH
#        uses: appleboy/scp-action@v1
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          password: ${{ secrets.PASSWORD }}
#          source: "backend/docker-compose.yaml"
#          target: ~/
#
#      - name: SSH deploy
#        uses: appleboy/ssh-action@v1
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          password: ${{ secrets.PASSWORD }}
#          script: |
#            cd ~/backend
#            docker compose down
#            docker compose pull
#            docker compose --env-file ../.env up -d
#            docker system prune -f

